{"version":3,"sources":["modules/funnel/DataTable.tsx","modules/funnel/CanvasFunnel.tsx","modules/funnel/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DataTable","items","onChange","handleLabelChange","value","i","newItems","label","handleValueChange","map","item","key","type","e","target","onClick","splice","handleDelete","CanvasFunnel","style","baseHeight","baseWidth","bgPadding","itemColor","lastWidth","marginBetween","innerFontSize","title","baseX","baseY","funnelElements","useState","context","setContext","currentActiveElement","setActiveElement","baseColor","hex","result","exec","parseInt","hexToRgb","useEffect","canvas","document","getElementById","getContext","clearRect","width","height","clear","drawScaled","minusWidth","length","element","drawScaledItem","drawMainText","drawPercents","drawTitle","drawMainPercent","drawActiveElement","font","textAlign","fillStyle","fillText","beginPath","counter","newColor","Math","round","getColor","moveTo","point1","x","y","lineTo","point2","point3","point4","fill","textY","toString","textX","textLength","measureText","stroke","mousePosition","data","getBoundingClientRect","clientX","left","clientY","top","activeElement","position","active","forEach","className","id","onMouseMove","FunnelWrapper","funnel","setFunnel","setValue","setBaseWidth","setLastWidth","setBaseHeight","setItemColor","bgColor","setBgColor","setBgPadding","setMargin","setInnerFontSize","setTitle","setFunnelElements","push","transform","placeholder","max","min","node","toPng","then","dataUrl","img","Image","src","body","appendChild","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bce014db.chunk.js","sourcesContent":["import React      from 'react';\r\nimport { Funnel } from './funnel.d';\r\n\r\ninterface Props {\r\n    onChange: (items: Funnel[]) => void,\r\n    items: Funnel[]\r\n}\r\n\r\nconst DataTable = ({ items, onChange }: Props) => {\r\n    const handleLabelChange = (value: string, i: number) => {\r\n        const newItems = [...items];\r\n        newItems[i].label = value;\r\n        onChange(newItems);\r\n    }\r\n\r\n    const handleValueChange = (value: number, i: number) => {\r\n        const newItems = [...items];\r\n        newItems[i].value = value;\r\n        onChange(newItems);\r\n    }\r\n\r\n    const handleDelete = (i: number) => {\r\n        const newItems = [...items];\r\n        newItems.splice(i, 1);\r\n        onChange(newItems);\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>\r\n                    Значение\r\n                </th>\r\n                <th>\r\n                    Лэйбл\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {items.map((item, i) =>\r\n               <tr key={i}>\r\n                   <td>\r\n                       <input value={item.value} type=\"number\"  onChange={(e) => handleValueChange(+e.target.value, i)}/>\r\n                   </td>\r\n\r\n                   <td>\r\n                       <input value={item.label} onChange={(e) => handleLabelChange(e.target.value, i)}/>\r\n                   </td>\r\n\r\n                   <td>\r\n                       <button onClick={() => handleDelete(i)}>Удалить</button>\r\n                   </td>\r\n               </tr>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default DataTable;","import React, { useEffect, useState } from 'react';\r\nimport { act }                                from 'react-dom/test-utils';\r\nimport { Funnel, FunnelElement, FunnelProps } from './funnel';\r\n\r\nconst CanvasFunnel =\r\n    ({\r\n         style: {\r\n             baseHeight, baseWidth, bgPadding, itemColor, marginBetween, lastWidth, innerFontSize, title, baseX, baseY\r\n         },\r\n         items,\r\n        funnelElements\r\n    }: FunnelProps) => {\r\n\r\n    let [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n    let [currentActiveElement, setActiveElement] = useState(-1);\r\n    const baseColor = hexToRgb(itemColor);\r\n    const textElements = [];\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById('funnelCanvas') as HTMLCanvasElement;\r\n        setContext(canvas.getContext('2d'));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clear();\r\n        drawScaled();\r\n    });\r\n\r\n    function hexToRgb(hex: string) {\r\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ?\r\n            [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [255, 255, 255];\r\n    }\r\n\r\n    const getColor = (counter: number) => {\r\n        const newColor = baseColor.map(i => i - Math.round((i / 100 * (counter * 5))));\r\n        return `rgb(${newColor[0]}, ${newColor[1]}, ${newColor[2]})`;\r\n    }\r\n\r\n    function clear() {\r\n        if (!context) return;\r\n        const canvas = document.getElementById('funnelCanvas') as HTMLCanvasElement;\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    const drawScaled = () => {\r\n        if (!context || !items[0]) return;\r\n        const minusWidth = (baseWidth - lastWidth) / (items.length + 2);\r\n\r\n        funnelElements.map((element, i) => {\r\n            drawScaledItem(element, i);\r\n        });\r\n\r\n        items.map((item, i) => {\r\n            drawMainText(item, i, minusWidth);\r\n            drawPercents(item, i, minusWidth);\r\n        });\r\n\r\n        drawTitle();\r\n        drawMainPercent();\r\n        drawActiveElement();\r\n    }\r\n\r\n    const drawTitle = () => {\r\n        if (!context) return;\r\n\r\n        context.font = `${innerFontSize}px Tahoma`;\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = 'black';\r\n        context.fillText(title, baseX + baseWidth / 2, bgPadding + innerFontSize);\r\n    }\r\n\r\n    const drawScaledItem = (element: FunnelElement, i: number) => {\r\n        if (!context) return;\r\n\r\n        context.beginPath();\r\n        context.fillStyle = getColor(i);\r\n        context.moveTo(element.point1.x, element.point1.y);\r\n        context.lineTo(element.point2.x, element.point2.y);\r\n        context.lineTo(element.point3.x, element.point3.y);\r\n        context.lineTo(element.point4.x, element.point4.y);\r\n        context.fill();\r\n    }\r\n\r\n    const drawMainText = (item: Funnel, i: number, minusWidth: number) => {\r\n        if (!context) return;\r\n        const textY = baseY + (baseHeight * i) + (baseHeight + innerFontSize - 4) / 2;\r\n\r\n        context.font = `${innerFontSize}px Tahoma`;\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = 'black';\r\n        context.fillText(item.value.toString(), baseX + (baseWidth / 2),  textY);\r\n\r\n        if (item.label) {\r\n            context.textAlign = \"left\";\r\n            context.fillText(item.label, baseX + (baseWidth) + 30, textY)\r\n        }\r\n    }\r\n\r\n    const drawPercents = (item: Funnel, i: number, minusWidth: number) => {\r\n        if (!context || i === 0 || !item.value || !items[i - 1].value) return;\r\n\r\n        const textY = baseY + (baseHeight * i) + (baseHeight + innerFontSize - 4) / 2;\r\n        const textX = baseX;\r\n\r\n        context.font = `${innerFontSize}px Tahoma`;\r\n        context.textAlign = \"start\";\r\n        context.fillStyle = 'black';\r\n        context.fillText(`${Math.round(100 / items[i - 1].value * item.value)} %`, textX,  textY);\r\n    }\r\n\r\n    const drawMainPercent = () => {\r\n        if (!context || items.length === 0 || !items[0].value || !items[items.length - 1].value) return;\r\n\r\n        const value = Math.round(100 / items[0].value * items[items.length - 1].value);\r\n\r\n        context.font = `${innerFontSize}px Tahoma`;\r\n        context.textAlign = \"start\";\r\n        context.fillStyle = 'black';\r\n        context.fillText(`${value} %`, bgPadding,  baseY + items.length * baseHeight / 2);\r\n\r\n        const textLength = context.measureText(`${value} %`).width;\r\n\r\n        context.beginPath();\r\n        context.fillStyle = 'black';\r\n        context.moveTo(bgPadding + textLength + 16, baseY + (baseHeight / 2));\r\n        context.lineTo(bgPadding + textLength + 8, baseY + (baseHeight / 2));\r\n        context.lineTo(bgPadding + textLength + 8, baseY + items.length * baseHeight - (baseHeight / 2));\r\n        context.lineTo(bgPadding + textLength + 16, baseY + items.length * baseHeight - (baseHeight / 2));\r\n        context.stroke();\r\n    }\r\n\r\n    const drawActiveElement = () => {\r\n        if (currentActiveElement === -1 || !context) return;\r\n\r\n        const element = funnelElements[currentActiveElement]\r\n        context.beginPath();\r\n        context.fillStyle = 'black';\r\n        context.moveTo(element.point1.x - 1, element.point1.y - 1);\r\n        context.lineTo(element.point2.x + 1, element.point2.y - 1);\r\n        context.lineTo(element.point3.x + 1, element.point3.y + 1);\r\n        context.lineTo(element.point4.x - 1, element.point4.y + 1);\r\n        context.lineTo(element.point1.x - 1, element.point1.y - 1);\r\n        context.stroke();\r\n    }\r\n\r\n    const handleMouseMove = (e: React.MouseEvent) => {\r\n        if (!context) return;\r\n        let active = activeElement(mousePosition({ clientX: e.clientX, clientY: e.clientY }));\r\n        if (active != currentActiveElement)\r\n            setActiveElement(active);\r\n    }\r\n\r\n    const mousePosition = (data: { clientX: number, clientY: number}) => {\r\n        const canvas = document.getElementById('funnelCanvas')!.getBoundingClientRect();\r\n\r\n        return {\r\n            x: data.clientX - canvas.left,\r\n            y: data.clientY - canvas.top\r\n        }\r\n    }\r\n\r\n    const activeElement = (position:  { x:number, y: number}) => {\r\n        let active = -1;\r\n\r\n        funnelElements.forEach((item: any, i: number) => {\r\n            if (position.x >= item.point1.x && position.x <= item.point2.x\r\n                && position.y >= item.point1.y && position.y <= item.point3.y)\r\n                active = i;\r\n        });\r\n\r\n        return active;\r\n    }\r\n\r\n    return (\r\n        <div className=\"funnel-canvas__wrapper\">\r\n            <canvas\r\n                id=\"funnelCanvas\"\r\n                className=\"funnel-canvas\"\r\n                width={baseWidth + (bgPadding * 2) + 400}\r\n                height={bgPadding * 2 + baseHeight * items.length + 50}\r\n                onMouseMove={handleMouseMove}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst _gradient1 = ['#8ddef2', '#68d8f3', '#3cd1ef', '#27acd7', '#8ddef2'];\r\n\r\nexport default CanvasFunnel;","import x                              from 'dom-to-image';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DataTable                      from './DataTable';\r\nimport { Funnel, FunnelElement }      from './funnel.d';\r\nimport CanvasFunnel                   from './CanvasFunnel';\r\nimport { Input, Slider } from 'antd';\r\n\r\nconst FunnelWrapper = () => {\r\n    const [funnel, setFunnel] = useState<Funnel[]>([\r\n        { value: 3232, label: 'Зашли на сайт' },\r\n        { value: 1244, label: 'Добавили в корзину' },\r\n        { value: 540, label: 'Купили' }\r\n    ]);\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [baseWidth, setBaseWidth] = useState(500);\r\n    const [lastWidth, setLastWidth] = useState(250);\r\n    const [baseHeight, setBaseHeight] = useState(60);\r\n    const [itemColor, setItemColor] = useState('#fee600');\r\n    const [bgColor, setBgColor] = useState('transparent');\r\n    const [bgPadding, setBgPadding] = useState(16);\r\n    const [marginBetween, setMargin] = useState(0);\r\n    const [innerFontSize, setInnerFontSize] = useState(20);\r\n    const [title, setTitle] = useState('Посетители за неделю');\r\n    const [funnelElements, setFunnelElements] = useState();\r\n\r\n    const baseX = bgPadding + 80;\r\n    const baseY = bgPadding + (title ? innerFontSize + bgPadding : 0);\r\n    const minusWidth = (baseWidth - lastWidth) / (funnel.length + 2);\r\n\r\n    useEffect(() => {\r\n        transform();\r\n    }, [funnel, value, baseWidth, lastWidth, baseHeight, itemColor, bgColor, bgPadding, marginBetween, innerFontSize, title]);\r\n\r\n    function transform() {\r\n        let items: FunnelElement[] = [];\r\n\r\n        funnel.forEach((item, i) => {\r\n            items.push({\r\n                value: item.value,\r\n                label: item.label,\r\n                point1: {\r\n                    x: baseX + (minusWidth * i),\r\n                    y: baseY + i * baseHeight + (i * marginBetween)\r\n                },\r\n                point2: {\r\n                    x: baseX + (baseWidth - (minusWidth * i)),\r\n                    y: baseY + i * baseHeight + (i * marginBetween)\r\n                },\r\n                point3: {\r\n                    x: baseX + (baseWidth - (minusWidth * (i + 1))),\r\n                    y: baseY + baseHeight + i * baseHeight + (i * marginBetween)\r\n                },\r\n                point4: {\r\n                    x: baseX + (minusWidth * (i + 1)),\r\n                    y: baseY + baseHeight + i * baseHeight + (i * marginBetween)\r\n                }\r\n            });\r\n        });\r\n\r\n        setFunnelElements(items);\r\n    }\r\n\r\n    const handleAddValue = () => {\r\n        if (funnel.length > 0 && funnel[funnel.length - 1].value < value)\r\n            return;\r\n\r\n        setFunnel([...funnel, { value: value }]);\r\n        setValue(0);\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        const node = document.getElementById('funnel-svg');\r\n\r\n        x.toPng(node!)\r\n         .then(function (dataUrl: string) {\r\n             let img = new Image();\r\n             img.src = dataUrl;\r\n             document.body.appendChild(img);\r\n         })\r\n    }\r\n\r\n    const getStyle = () => {\r\n        return {\r\n            baseHeight,\r\n            baseWidth,\r\n            bgPadding,\r\n            bgColor,\r\n            itemColor,\r\n            marginBetween,\r\n            lastWidth,\r\n            innerFontSize,\r\n            title,\r\n            baseX,\r\n            baseY\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"funnel__wrapper\">\r\n            <div className=\"funnel__settings\">\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Заголовок\r\n                    </label>\r\n                    <Input\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        value={title}\r\n                        placeholder=\"Заголовок\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Цвет фона\r\n                    </label>\r\n                    <input\r\n                        type=\"color\"\r\n                        onChange={(e) => setBgColor(e.target.value)}\r\n                        value={bgColor}\r\n                    />\r\n\r\n                    <button onClick={() => setBgColor('transparent')}>Убрать фон</button>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Внутренние отступы\r\n                    </label>\r\n                    <Slider\r\n                        value={bgPadding}\r\n                        onChange={(value: number) => setBgPadding(value)}\r\n                        max={100}\r\n                        min={0}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\" >\r\n                    <label className=\"label\" >\r\n                        Отступы между элементами\r\n                    </label>\r\n                    <Slider\r\n                        value={marginBetween}\r\n                        onChange={(value: number) => setMargin(value)}\r\n                        max={100}\r\n                        min={0}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Размер текста в элементах\r\n                    </label>\r\n                    <Slider\r\n                        value={innerFontSize}\r\n                        onChange={(value: number) => setInnerFontSize(value)}\r\n                        max={36}\r\n                        min={12}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Цвет элементов\r\n                    </label>\r\n                    <input\r\n                        type=\"color\"\r\n                        onChange={(e) => setItemColor(e.target.value)}\r\n                        value={itemColor}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Ширина первого элемента\r\n                    </label>\r\n                    <Slider\r\n                        value={baseWidth}\r\n                        onChange={(value: number) => setBaseWidth(value)}\r\n                        max={1000}\r\n                        min={100}\r\n                    />\r\n                </div>\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Ширина последнего элемента\r\n                    </label>\r\n                    <Slider\r\n                        value={lastWidth}\r\n                        onChange={(value: number) => setLastWidth(value)}\r\n                        max={1000}\r\n                        min={100}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <label className=\"label\">\r\n                        Высота элементов\r\n                    </label>\r\n                    <Slider\r\n                        value={baseHeight}\r\n                        onChange={(value: number) => setBaseHeight(value)}\r\n                        max={150}\r\n                        min={10}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"funnel__inner\">\r\n                <div>\r\n                    <input onChange={(e) => setValue(+e.target.value)} type=\"tel\" value={value}/>\r\n                    <button onClick={handleAddValue}>Добавить</button>\r\n                    <button onClick={handleDownload}>Выгрузить</button>\r\n                </div>\r\n\r\n                <DataTable items={funnel} onChange={(items) => setFunnel(items)}/>\r\n                <CanvasFunnel items={funnel} style={getStyle()} funnelElements={funnelElements}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunnelWrapper;","import React from 'react';\r\nimport './styles/app.scss';\r\nimport Funnel from './modules/funnel';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Funnel />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}